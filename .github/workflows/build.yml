name: Build
run-name: Valkyrie build triggered by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create release'
        required: false
        default: false
        type: boolean
jobs:
  Build:
    runs-on: windows-latest
    steps:

      - uses: actions/checkout@v4

      #Get the version for build and store in environment variable for later use.
      - name: Get version
        run: echo "Build_Version=${${{ github.workspace }}/unity/Assets/Resources/version.txt}" | Out-File -FilePath $env:GITHUB_ENV -Append

      ## Save build version as artifact to ensure it can be used in the release step.
      - name: Save build version as artifact
        run: echo "${{ github.workspace }}/unity/Assets/Resources/version.txt" > build_version.txt
      - uses: actions/upload-artifact@v4
        with:
            name: build-version
            path: build_version.txt

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'corretto'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      #Downloading and installing unity
      #It should be possible to install more than one module at a time
      #but it doesn't seem to work so the action has to be repeated for
      #each module.
      - name: Setup Unity and Linux Module
        uses: kuler90/setup-unity@v1.1.0
        with:
          unity-version: 2018.4.20f1
          unity-modules: "linux"
          install-path: "C:/Program Files"
      - name: Setup Unity Mac Module
        uses: kuler90/setup-unity@v1.1.0
        with:
          unity-version: 2018.4.20f1
          unity-modules: "mac-mono"
          install-path: "C:/Program Files"
      - name: Setup Unity Android Module
        uses: kuler90/setup-unity@v1.1.0
        with:
          unity-version: 2018.4.20f1
          unity-modules: "android"
          install-path: "C:/Program Files"
      - name: Setup Unity IOS Module
        uses: kuler90/setup-unity@v1.1.0
        with:
          unity-version: 2018.4.20f1
          unity-modules: "ios"
          install-path: "C:/Program Files"
      #Activate requires unity account creds for unity license checkout.
      - name: Activate Unity
        uses: kuler90/activate-unity@v1
        with:
          unity-username: ${{ secrets.UNITY_USERNAME }}
          unity-password: ${{ secrets.UNITY_PASSWORD }}
          unity-authenticator-key: ${{ secrets.UNITY_AUTHENTICATOR_KEY }}
      #Move unity to where the build script expects it to be installed.
      - name: Move unity to expected location
        run: Rename-Item "C:/Program Files/2018.4.20f1" Unity

      #Remove all pre-installed android sdk build tool versions except 28.0.3
      #Get-ChildItem -Path "C:/Android/android-sdk/build-tools" -Exclude 28.0.3,29.0.2 | Remove-Item -Recurse -Force
      - name: Remove unwanted android sdk build tool versions
        run: |
              Move-Item -Path C:/Android/android-sdk/build-tools/* -Destination c:/windows/temp
              Get-ChildItem -Path "C:/Android/android-sdk/build-tools"

      #Remove all pre-installed android sdk platform versions except 29
      #Get-ChildItem -Path "C:/Android/android-sdk/platforms" -Exclude android-29 | Remove-Item -Recurse -Force
      - name: Remove unwanted android sdk platform versions
        run: |
              Move-Item -Path C:/Android/android-sdk/platforms/* -Destination c:/windows/temp
              Get-ChildItem -Path "C:/Android/android-sdk/platforms"

      #Download and extract android sdk platform and build tools
      - name: Install android sdk platform and build tools
        run: |
              C:/Android/android-sdk/cmdline-tools/latest/bin/sdkmanager.bat "platforms;android-29"
              C:/Android/android-sdk/cmdline-tools/latest/bin/sdkmanager.bat "build-tools;28.0.3" "build-tools;29.0.2" "cmdline-tools;latest" "tools"

      #Run build script
      - name: Run build batch script
        run: ${{ github.workspace }}/build.bat

      - name: Archive windows unity build log
        uses: actions/upload-artifact@v4
        with:
          name: windows-unity-build-log
          path: ${{ github.workspace }}/build/Editor_valkyrie-windows.log

      - name: Archive macos unity build log
        uses: actions/upload-artifact@v4
        with:
          name: macos-unity-build-log
          path: ${{ github.workspace }}/build/Editor_valkyrie-macos.log

      - name: Archive linux unity build log
        uses: actions/upload-artifact@v4
        with:
          name: linux-unity-build-log
          path: ${{ github.workspace }}/build/Editor_valkyrie-linux.log

      - name: Archive android unity build log
        uses: actions/upload-artifact@v4
        with:
          name: android-unity-build-log
          path: ${{ github.workspace }}/build/Editor_valkyrie-android.log

      - name: Archive windows zip build
        uses: actions/upload-artifact@v4
        with:
          name: windows-unity-build-zip
          path: ${{ github.workspace }}/build/valkyrie-windows-${{ env.Build_Version }}.zip

      - name: Archive windows 7zip build
        uses: actions/upload-artifact@v4
        with:
          name: windows-unity-build-7zip
          path: ${{ github.workspace }}/build/valkyrie-windows-${{ env.Build_Version }}.7z

      - name: Archive windows installer exe build
        uses: actions/upload-artifact@v4
        with:
          name: windows-unity-build-exe
          path: ${{ github.workspace }}/build/valkyrie-windows-${{ env.Build_Version }}.exe

      - name: Archive macos build
        uses: actions/upload-artifact@v4
        with:
          name: macos-unity-build
          path: ${{ github.workspace }}/build/valkyrie-macos-${{ env.Build_Version }}.tar.gz

      - name: Archive linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-unity-build
          path: ${{ github.workspace }}/build/valkyrie-linux-${{ env.Build_Version }}.tar.gz

      - name: Archive android build
        uses: actions/upload-artifact@v4
        with:
          name: android-unity-build
          path: ${{ github.workspace }}/build/Valkyrie-android-${{ env.Build_Version }}.apk
  Release:
    if: ${{ github.event.inputs.create_release == 'true' }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download all zip build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./unzipped

      - name: Unzip all build zips
        run: |
          find ./unzipped -type f -name "*.zip" -exec unzip -o {} -d ./unzipped/unpacked/ \;

      - name: Get version from artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-unity-build-log
          path: ./logs

      - name: Download build version
        uses: actions/download-artifact@v4
        with:
          name: build-version

      - name: Set build version env
        run: echo "Build_Version=$(cat build_version.txt)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.Build_Version }}
          name: ${{ env.Build_Version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload unpacked files to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./unzipped/unpacked/**
          tag_name: ${{ env.Build_Version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
