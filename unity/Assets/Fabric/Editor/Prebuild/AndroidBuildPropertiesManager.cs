namespace Fabric.Internal.Editor.Prebuild
{
	using UnityEngine;
	using UnityEditor;
	using System.Collections.Generic;
	using System.IO;

	public static class AndroidBuildPropertiesManager
	{
		private const string AppNameKey = "app_name";
		private const string PackageNameKey = "package_name";
		private const string BuildIdKey = "build_id";
		private const string VersionCodeKey = "version_code";
		private const string VersionNameKey = "version_name";

		private const string BuildPropertiesComment = "# This file is automatically generated by Crashlytics to uniquely\n"
			+ "# identify individual builds of your Android application.\n\n"
			+ "# Do NOT modify, delete, or commit to source control!\n";

		private const string BuildPropertiesFileName = "crashlytics-build.properties";

		private static readonly string AssetsFolder = Update.FileUtils.NormalizePathForPlatform (
			Path.Combine (Application.dataPath, "StreamingAssets")
		);

		public static void UpdateBuildProperties(string buildId)
		{
#if UNITY_5_6_OR_NEWER
			string bundleIdentifier = PlayerSettings.applicationIdentifier;
#else
			string bundleIdentifier = PlayerSettings.bundleIdentifier;
#endif
			Dictionary<string, string> properties = new Dictionary<string, string> () {
				{ AppNameKey, PlayerSettings.productName },
				{ PackageNameKey, bundleIdentifier },
				{ BuildIdKey, buildId },
				{ VersionCodeKey, PlayerSettings.Android.bundleVersionCode.ToString () },
				{ VersionNameKey, PlayerSettings.bundleVersion }
			};

			try {
				Directory.CreateDirectory (AssetsFolder);

				string propertiesFilePath = Update.FileUtils.NormalizePathForPlatform (
					Path.Combine (AssetsFolder, BuildPropertiesFileName)
				);

				using (StreamWriter writer = new StreamWriter (File.Create(propertiesFilePath), System.Text.Encoding.UTF8)) {
					PropertiesWriter.Write (properties, writer, BuildPropertiesComment);
				}
			} catch (System.Exception e) {
				Utils.Error ("Could not write {0} file. Beta will not work! Error: {1}", BuildPropertiesFileName, e.Message);
			}
		}
	}		
}
